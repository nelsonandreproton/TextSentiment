[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "text-sentiment-extraction"
version = "1.0.0"
description = "Web application for extracting text from images and semantic search using vector embeddings"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Text Sentiment Extraction Team"},
]
keywords = ["ocr", "text-extraction", "semantic-search", "fastapi", "postgresql", "ollama"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    "pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "pytesseract>=0.3.10",
    "psycopg2-binary>=2.9.0",
    "pgvector>=0.2.0",
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "python-dotenv>=1.0.0",
    "jinja2>=3.1.0",
    "aiofiles>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/your-org/text-sentiment-extraction"
Repository = "https://github.com/your-org/text-sentiment-extraction.git"
Documentation = "https://github.com/your-org/text-sentiment-extraction#readme"
Changelog = "https://github.com/your-org/text-sentiment-extraction/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*", "config*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "config"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]